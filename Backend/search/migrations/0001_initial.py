# Generated by Django 5.0.7 on 2025-09-02 20:00

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0007_product_featured_image'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SearchAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('total_searches', models.PositiveIntegerField(default=0)),
                ('unique_searches', models.PositiveIntegerField(default=0)),
                ('searches_with_results', models.PositiveIntegerField(default=0)),
                ('searches_without_results', models.PositiveIntegerField(default=0)),
                ('total_clicks', models.PositiveIntegerField(default=0)),
                ('total_conversions', models.PositiveIntegerField(default=0)),
                ('average_results_per_search', models.FloatField(default=0.0)),
                ('average_search_time', models.FloatField(default=0.0)),
                ('cache_hit_rate', models.FloatField(default=0.0)),
                ('top_queries', models.JSONField(default=list)),
                ('top_categories', models.JSONField(default=list)),
                ('top_sellers', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date'], name='search_sear_date_518cd9_idx')],
                'unique_together': {('date',)},
            },
        ),
        migrations.CreateModel(
            name='SearchFilter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filter_type', models.CharField(choices=[('CATEGORY', 'Category Filter'), ('PRICE_RANGE', 'Price Range Filter'), ('SELLER', 'Seller Filter'), ('RATING', 'Rating Filter'), ('BRAND', 'Brand Filter'), ('AVAILABILITY', 'Availability Filter'), ('FEATURES', 'Product Features Filter')], max_length=20)),
                ('filter_name', models.CharField(max_length=100)),
                ('filter_key', models.CharField(max_length=50, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_required', models.BooleanField(default=False)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('filter_options', models.JSONField(default=dict)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['display_order', 'filter_name'],
                'indexes': [models.Index(fields=['filter_type', 'is_active'], name='search_sear_filter__5f8667_idx'), models.Index(fields=['display_order'], name='search_sear_display_82bb47_idx')],
            },
        ),
        migrations.CreateModel(
            name='SearchQuery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query', models.CharField(db_index=True, max_length=255)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('price_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rating_filter', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('results_count', models.PositiveIntegerField(default=0)),
                ('has_results', models.BooleanField(default=False)),
                ('clicked_results', models.PositiveIntegerField(default=0)),
                ('conversion_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_searched', models.DateTimeField(auto_now=True)),
                ('category_filter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.category')),
                ('seller_filter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.seller')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_searched'],
            },
        ),
        migrations.CreateModel(
            name='SearchSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('search_queries', models.JSONField(default=list)),
                ('applied_filters', models.JSONField(default=dict)),
                ('viewed_products', models.JSONField(default=list)),
                ('clicked_products', models.JSONField(default=list)),
                ('total_searches', models.PositiveIntegerField(default=0)),
                ('total_clicks', models.PositiveIntegerField(default=0)),
                ('session_duration', models.DurationField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='SearchClick',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('click_position', models.PositiveIntegerField()),
                ('result_page', models.PositiveIntegerField(default=1)),
                ('led_to_purchase', models.BooleanField(default=False)),
                ('purchase_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('clicked_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('search_query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clicks', to='search.searchquery')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='search.searchsession')),
            ],
            options={
                'ordering': ['-clicked_at'],
            },
        ),
        migrations.CreateModel(
            name='SearchSuggestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('suggestion', models.CharField(max_length=255, unique=True)),
                ('suggestion_type', models.CharField(choices=[('POPULAR', 'Popular Search'), ('TRENDING', 'Trending Search'), ('CATEGORY', 'Category Suggestion'), ('PRODUCT', 'Product Suggestion'), ('BRAND', 'Brand Suggestion')], max_length=20)),
                ('search_count', models.PositiveIntegerField(default=0)),
                ('click_count', models.PositiveIntegerField(default=0)),
                ('conversion_count', models.PositiveIntegerField(default=0)),
                ('priority', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.seller')),
            ],
            options={
                'ordering': ['-priority', '-search_count'],
            },
        ),
        migrations.CreateModel(
            name='ProductSearchIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('search_title', models.CharField(db_index=True, max_length=500)),
                ('search_description', models.TextField()),
                ('search_category', models.CharField(db_index=True, max_length=200)),
                ('search_seller', models.CharField(db_index=True, max_length=200)),
                ('search_tags', models.TextField(blank=True)),
                ('price', models.DecimalField(db_index=True, decimal_places=2, max_digits=10)),
                ('rating', models.FloatField(blank=True, db_index=True, null=True)),
                ('stock', models.PositiveIntegerField(db_index=True)),
                ('is_featured', models.BooleanField(db_index=True, default=False)),
                ('is_best_seller', models.BooleanField(db_index=True, default=False)),
                ('is_flash_sale', models.BooleanField(db_index=True, default=False)),
                ('is_available', models.BooleanField(db_index=True, default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='search_index', to='products.product')),
            ],
            options={
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='search_prod_search__f5d6d6_gin'), models.Index(fields=['price', 'rating'], name='search_prod_price_c40d12_idx'), models.Index(fields=['search_category', 'search_seller'], name='search_prod_search__382ac4_idx'), models.Index(fields=['is_featured', 'is_best_seller'], name='search_prod_is_feat_c6e459_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='searchquery',
            index=models.Index(fields=['query', 'created_at'], name='search_sear_query_62def4_idx'),
        ),
        migrations.AddIndex(
            model_name='searchquery',
            index=models.Index(fields=['user', 'created_at'], name='search_sear_user_id_2836be_idx'),
        ),
        migrations.AddIndex(
            model_name='searchquery',
            index=models.Index(fields=['has_results', 'created_at'], name='search_sear_has_res_31bfea_idx'),
        ),
        migrations.AddIndex(
            model_name='searchsession',
            index=models.Index(fields=['session_id'], name='search_sear_session_ae4f6e_idx'),
        ),
        migrations.AddIndex(
            model_name='searchsession',
            index=models.Index(fields=['user', 'started_at'], name='search_sear_user_id_3588ab_idx'),
        ),
        migrations.AddIndex(
            model_name='searchsession',
            index=models.Index(fields=['last_activity'], name='search_sear_last_ac_3732cb_idx'),
        ),
        migrations.AddIndex(
            model_name='searchclick',
            index=models.Index(fields=['search_query', 'clicked_at'], name='search_sear_search__028f2d_idx'),
        ),
        migrations.AddIndex(
            model_name='searchclick',
            index=models.Index(fields=['product', 'clicked_at'], name='search_sear_product_a6edbe_idx'),
        ),
        migrations.AddIndex(
            model_name='searchclick',
            index=models.Index(fields=['user', 'clicked_at'], name='search_sear_user_id_d5acd5_idx'),
        ),
        migrations.AddIndex(
            model_name='searchsuggestion',
            index=models.Index(fields=['suggestion_type', 'is_active'], name='search_sear_suggest_2a1eb2_idx'),
        ),
        migrations.AddIndex(
            model_name='searchsuggestion',
            index=models.Index(fields=['priority', 'search_count'], name='search_sear_priorit_542f42_idx'),
        ),
        migrations.AddIndex(
            model_name='searchsuggestion',
            index=models.Index(fields=['suggestion'], name='search_sear_suggest_dc592d_idx'),
        ),
    ]
